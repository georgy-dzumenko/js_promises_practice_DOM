{"version":3,"sources":["scripts/main.js"],"names":["body","document","querySelector","createMessage","number","type","nextPromise","message","createElement","insertAdjacentElement","dataset","qa","classList","add","textContent","firstPromise","Promise","resolve","reject","setTimeout","Error","addEventListener","secondPromise","e","button","thirdPromise","left","right","then"],"mappings":";AAAA,aAEA,IAAMA,EAAOC,SAASC,cAAc,QAEpC,SAASC,EAAcC,EAAQC,EAAMC,GAC7BC,IAAAA,EAAUN,SAASO,cAAc,OAgBhCF,OAdPN,EAAKS,sBAAsB,aAAcF,GAEzCA,EAAQG,QAAQC,GAAK,eAER,YAATN,IACFE,EAAQK,UAAUC,IAAIR,GACtBE,EAAQO,YAAiBV,GAAAA,OAAAA,EAAzB,0BAGW,YAATC,IACFE,EAAQK,UAAUC,IAAIR,GACtBE,EAAQO,YAAiBV,GAAAA,OAAAA,EAAzB,0BAGKE,EAGT,IAAMS,EAAe,IAAIC,QAAQ,SAACC,EAASC,GACzCC,WAAW,WAAMD,OAAAA,EAAO,IAAIE,QAAU,KACtCpB,EAAKqB,iBAAiB,YAAa,WAAMJ,OAAAA,QAGrCK,EAAgB,IAAIN,QAAQ,SAACC,GACjCjB,EAAKqB,iBAAiB,YAAa,SAACE,GACjB,IAAbA,EAAEC,QACJP,QAKAQ,EAAe,IAAIT,QAAQ,SAACC,GAC5BS,IAAAA,GAAO,EACPC,GAAQ,EAEZ3B,EAAKqB,iBAAiB,YAAa,SAACE,GACjB,IAAbA,EAAEC,SACJE,GAAO,GAGQ,IAAbH,EAAEC,SACJG,GAAQ,GAGND,GAAQC,GACVV,QAKNF,EACGa,KAAK,WAAMzB,OAAAA,EAAc,QAAS,UAAWmB,IAC5C,WAAMnB,OAAAA,EAAc,QAAS,UAAWmB,KACzCM,KAAK,WAAMzB,OAAAA,EAAc,SAAU,UAAWsB,KAC9CG,KAAK,WAAMzB,OAAAA,EAAc,QAAS","file":"main.0d1469fd.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst body = document.querySelector('body');\n\nfunction createMessage(number, type, nextPromise) {\n  const message = document.createElement('div');\n\n  body.insertAdjacentElement('afterbegin', message);\n\n  message.dataset.qa = 'notification';\n\n  if (type === 'warning') {\n    message.classList.add(type);\n    message.textContent = `${number} promise was rejected`;\n  }\n\n  if (type === 'success') {\n    message.classList.add(type);\n    message.textContent = `${number} promise was resolved`;\n  }\n\n  return nextPromise;\n}\n\nconst firstPromise = new Promise((resolve, reject) => {\n  setTimeout(() => reject(new Error()), 3000);\n  body.addEventListener('mousedown', () => resolve());\n});\n\nconst secondPromise = new Promise((resolve) => {\n  body.addEventListener('mousedown', (e) => {\n    if (e.button !== 1) {\n      resolve();\n    }\n  });\n});\n\nconst thirdPromise = new Promise((resolve) => {\n  let left = false;\n  let right = false;\n\n  body.addEventListener('mousedown', (e) => {\n    if (e.button === 0) {\n      left = true;\n    }\n\n    if (e.button === 2) {\n      right = true;\n    }\n\n    if (left && right) {\n      resolve();\n    }\n  });\n});\n\nfirstPromise\n  .then(() => createMessage('First', 'success', secondPromise),\n    () => createMessage('First', 'warning', secondPromise))\n  .then(() => createMessage('Second', 'success', thirdPromise))\n  .then(() => createMessage('Third', 'success'));\n"]}